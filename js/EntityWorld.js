// Generated by CoffeeScript 1.3.3
(function() {
  var EntityWorld,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Artemis.EntityWorld = {};

  EntityWorld = (function() {

    function EntityWorld() {
      this.entityManager = new Artemis.EntityManager(this);
      this.systemManager = new Artemis.SystemManager(this);
      this.tagManager = new Artemis.TagManager(this);
      this.groupManager = new Artemis.GroupManager(this);
      this.deleted = [];
      this.refreshed = [];
      this.delta = 0;
    }

    EntityWorld.prototype.createEntity = function() {
      return this.entityManager._create();
    };

    EntityWorld.prototype.getEntity = function(id) {
      return this.entityManager._getEntity(id);
    };

    EntityWorld.prototype.deleteEntity = function(entity) {
      if (__indexOf.call(this.deleted, entity) < 0) {
        return this.deleted.push(entity);
      }
    };

    EntityWorld.prototype.refreshEntity = function(entity) {
      return this.refreshed.push(entity);
    };

    EntityWorld.prototype.loopStart = function() {
      var entity, _i, _j, _len, _len1, _ref, _ref1;
      _ref = this.refreshed;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        this.entityManager.refresh(entity);
      }
      this.refreshed = [];
      _ref1 = this.deleted;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        entity = _ref1[_j];
        this.entityManager.remove(entity);
      }
      return this.deleted = [];
    };

    return EntityWorld;

  })();

  Artemis.EntityWorld = EntityWorld;

}).call(this);
