// Generated by CoffeeScript 1.3.3
(function() {

  describe("Entity Manager", function() {
    var world;
    world = null;
    before(function() {
      return world = new Bragi.World();
    });
    describe("Instantiation", function() {
      var entityManager;
      entityManager = null;
      before(function() {
        return entityManager = new Bragi.EntityManager(world);
      });
      it("should have the world instance as property", function() {
        return entityManager.world.should.be.an["instanceof"](Bragi.World);
      });
      it("should have nextId equal to 0", function() {
        return entityManager.nextId.should.be.equal(0);
      });
      return it("should have an empty object called entities", function() {
        entityManager.entities.should.be.an["instanceof"](Object);
        return entityManager.entities.should.be.empty;
      });
    });
    return describe("Creating entities", function() {
      var entity, entity2, entityManager;
      entityManager = null;
      entity = null;
      entity2 = null;
      before(function() {
        entityManager = new Bragi.EntityManager(world);
        entity = entityManager.create();
        return entity2 = entityManager.create();
      });
      it("should have created 2 entities", function() {
        entity.should.be.an["instanceof"](Bragi.Entity);
        return entity2.should.be.an["instanceof"](Bragi.Entity);
      });
      it("entities should have differents ids", function() {
        return entity.id.should.be.not.equal(entity2.id);
      });
      it("should have nextId equal to 2", function() {
        return entityManager.nextId.should.be.equal(2);
      });
      return it("should have an object called entities with a length of 2", function() {
        return Object.keys(entityManager.entities).should.have.length(2);
      });
    });
  });

}).call(this);
