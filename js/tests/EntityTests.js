// Generated by CoffeeScript 1.3.3
(function() {

  describe("Entity", function() {
    var world;
    world = null;
    before(function() {
      return world = new Bragi.EntityWorld();
    });
    describe("Instantiation", function() {
      var entity;
      entity = null;
      before(function() {
        return entity = new Bragi.Entity(world, 0);
      });
      it("should have the world instance as property", function() {
        return entity.world.should.be.an["instanceof"](Bragi.EntityWorld);
      });
      return it("should have an id equal to 0", function() {
        return entity.id.should.be.equal(0);
      });
    });
    describe("Adding a component", function() {
      var entity, notInheritingFunction;
      entity = null;
      notInheritingFunction = null;
      before(function() {
        var notInheriting;
        entity = new Bragi.Entity(world, 0);
        entity.addComponent(new BragiTests.DummyComponentHP(100));
        notInheriting = new Object();
        return notInheritingFunction = function(notInheriting) {
          return entityManager._addComponent(entity, notInheriting);
        };
      });
      it("should throw an error if calling with an object not inheriting from Bragi.Component", function() {
        return notInheritingFunction.should.Throw(Error);
      });
      return it("should have a component stored in bits", function() {
        return entity.bits.should.not.be.equal(0);
      });
    });
    describe("Removing a component", function() {
      var entity;
      entity = null;
      before(function() {
        var component;
        entity = new Bragi.Entity(world, 0);
        component = new BragiTests.DummyComponentHP(100);
        entity.addComponent(component);
        return entity.removeComponent("DummyComponentHP");
      });
      return it("should not have a component stored in bits", function() {
        return entity.bits.should.be.equal(0);
      });
    });
    return describe("Getting a component", function() {
      var entity, notInheritingFunction;
      entity = null;
      notInheritingFunction = null;
      before(function() {
        var component, test;
        entity = new Bragi.Entity(world, 0);
        component = new BragiTests.DummyComponentHP(100);
        entity.addComponent(component);
        return test = entity.getComponent(BragiTests.DummyComponentHP);
      });
      return it("should throw an error if calling with an object not inheriting from Bragi.Component", function() {
        return fail;
      });
    });
  });

}).call(this);
