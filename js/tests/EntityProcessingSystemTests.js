// Generated by CoffeeScript 1.3.3
(function() {

  describe("EntityProcessingSystems", function() {
    describe("Instatiating a system", function() {
      var system;
      system = null;
      before(function() {
        return system = new BragiTests.DummySystemHP;
      });
      return it("should use the System constructor and have typeFlags equal to 1 since we added 1 component", function() {
        return system.typeFlags.should.be.equal(1);
      });
    });
    return describe("Processing several entities", function() {
      var component1, component2, system;
      system = null;
      component1 = null;
      component2 = null;
      before(function() {
        var component, entities, entity1, entity2, world;
        world = new Bragi.EntityWorld();
        entity1 = new Bragi.Entity(world, 0);
        entity2 = new Bragi.Entity(world, 0);
        component = new BragiTests.DummyComponentHP(100);
        entity1.addComponent(component);
        entity2.addComponent(component);
        system = new BragiTests.DummySystemHP;
        system.world = world;
        system.initialize();
        entities = [entity1, entity2];
        console.log(entities);
        system.processEntities(entities);
        component1 = entity1.getComponent("DummyComponentHP");
        return component2 = entity2.getComponent("DummyComponentHP");
      });
      it("should use the System constructor and have typeFlags equal to 1 since we added 1 component", function() {
        return system.typeFlags.should.be.equal(1);
      });
      it("component1 should have HP equal to 0", function() {
        return component1.hp.should.be.equal(0);
      });
      return it("component2 should have HP equal to 0", function() {
        return component2.hp.should.be.equal(0);
      });
    });
  });

}).call(this);
